#
#
# Depends on:
#    Makefile.scripts
#    debian/
#    jehon*/
#
# Generate:
#    repo/
#

packages: packages-dump packages-build packages-test

PACKAGES_TMP=$(TMP)/packages
PACKAGES_TMP_STRUCTURE=$(PACKAGES_TMP)/structure
PACKAGES_REPO=$(PUBLISH)/packages
PACKAGES_REPO_MARK=$(PACKAGES_REPO)/.buit

dump: packages-dump
clean: packages-clean
build: packages-build
test: packages-test
lint: packages-lint
release: packages-release

.PHONY: packages-dump
packages-dump:
	$(call dump_space)
	$(call dump_title,PACKAGES)
	$(call dump_info,PWD,$(shell pwd))
	$(call dump_info,PACKAGES_TMP)
	$(call dump_info,PACKAGES_TMP_STRUCTURE)
	gpg --list-keys

.PHONY: packages-clean
packages-clean:
	rm -fr repo/*
	rm -fr "$(PACKAGES_TMP)"
	docker image rm -f $$( docker image ls --filter 'reference=test-packages/*' --format '{{.Repository}}:{{.Tag}}' ) 2>/dev/null || echo "!! No image to remove"

.PHONY: packages-build
packages-build:  $(PACKAGES_TMP)/.built

$(PACKAGES_TMP)/.built: \
		$(PUBLISH)/latest-key.pub \
		$(PACKAGES_REPO_MARK)

	$(call touch,$@)

$(PUBLISH)/latest-key.pub: packages/jehon/usr/share/jehon/etc/ssh/authorized_keys/root
	$(call mkdir,$@)
	cp -f "$<" "$@"
	$(call touch,$@)

$(PACKAGES_REPO_MARK): $(PACKAGES_REPO)/jehon.deb $(PACKAGES_REPO)/Release
	$(call touch,$@)

$(PACKAGES_REPO)/jehon.deb: $(PACKAGES_REPO)/Packages
	cp $(PACKAGES_REPO)/jehon_*.deb $(PACKAGES_REPO)/jehon.deb

$(PACKAGES_REPO)/Release: $(PACKAGES_REPO)/Packages
	# -o: APT::FTPArchive::Release::* => Origin, Label, Suite, Version, Codename, Date, NotAutomatic, ButAutomaticUpgrades, Acquire-By-Hash, Valid-Until, Signed-By, Architectures, Components and Description.
	# See https://manpages.debian.org/testing/apt-utils/apt-ftparchive.1.en.html
	cd $(PACKAGES_REPO) && apt-ftparchive -o "APT::FTPArchive::Release::Origin=jehon" release . >Release | jh-tag-stdin "index-release"
	$(call touch,$@)

$(PACKAGES_REPO)/Packages: $(PACKAGES_TMP)/.structure.built

	@echo "Building version $(call version)"
# TODO: get previous versions of everything from repo

# Clean up the files that we will generate
	mkdir -p $(PACKAGES_REPO)/
	rm -f $(PACKAGES_REPO)/*.deb
	rm -f $(PACKAGES_REPO)/Release
	rm -f $(PACKAGES_REPO)/Packages
	rm -fr $(PACKAGES_TMP)/jehon*.deb

# Build the deb packages
# https://askubuntu.com/a/963445
	cd $(PACKAGES_TMP_STRUCTURE) && DEBEMAIL="jehon@users.noreply.github.com" dch --newversion="$(call version)" --distribution "stable" "all latest updates" | jh-tag-stdin "build-changelog"
	cd $(PACKAGES_TMP_STRUCTURE) && debuild -rfakeroot --no-lintian -uc -us --build=binary | jh-tag-stdin "build-debs"

# debs are in one folder above, let's move them into $(PACKAGES_REPO)/
	mv $(PACKAGES_TMP)/*.deb $(PACKAGES_REPO)/ | jh-tag-stdin "build-move-deb"
	mv $(PACKAGES_TMP)/jehon-debs* $(PACKAGES_REPO)/ | jh-tag-stdin "build-move-jehon"

# build the references
	cd $(PACKAGES_REPO) && dpkg-scanpackages -m . | sed -e "s%./%%" >Packages | jh-tag-stdin "index-packages"
	$(call touch,$@)

.PHONY: packages-structure
packages-structure: $(PACKAGES_TMP)/.structure.built

$(PACKAGES_TMP)/.structure.built: packages/pkg-build-structure.sh \
		$(VERSION_FILE) \
		packages/jehon/usr/share/keyrings/jehon.gpg \
		$(NODE_TMP)/built/.built \
		$(shell find packages/ )

	packages/pkg-build-structure.sh "$(PACKAGES_TMP_STRUCTURE)" "$(call version)" | jh-tag-stdin "build-structure"
	rsync -ai tmp/node/built/* "$(PACKAGES_TMP_STRUCTURE)"/jehon/usr/share/jehon/node/
	$(call touch,$@)

.PHONY: packages-test
packages-test: packages-build
	run-parts --exit-on-error --verbose --regex "^[0-9][0-9]-.*\.sh" ./tests/packages

.PHONY: packages-lint
packages-lint:
	@true

$(PACKAGES_REPO)/Release.gpg: $(PACKAGES_REPO)/Release
	rm -f "$@"
# If we don't have the key, we do it anyway (ex: in PR)
	gpg --sign --detach-sign --armor --local-user BE92EC0B8D9AD0707EF597724E69AF0D0EC8EDA1 --output "$@" "$<" || true
	$(call touch,$@)

.PHONY: packages-release
packages-release: $(PACKAGES_TMP)/.built \
		$(PACKAGES_REPO)/Release.gpg

	rsync -a "$(PACKAGES_REPO)/" "$(PUBLISH)/repo"

packages-deploy-local: packages-build
	apt list --quiet --installed 2>/dev/null \
		| grep "^jehon-" \
		| cut -d "/" -f 1 \
		| awk '{print "$(ROOT)/$(PACKAGES_REPO)/"$$1"*.deb"}' \
		| xargs \
			ssh root@localhost dpkg -i \
			"$(ROOT)/$(PACKAGES_REPO)"/jehon.deb
