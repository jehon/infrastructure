#!/usr/bin/env bash

#
# Make an already parametrized mount
#
# This file is in the sudoers, thus need to be carefully protected
#
#    see jh-smb that call this
#

set -o errexit

# shellcheck source=SCRIPTDIR/../../jehon/usr/bin/jh-lib
. jh-lib

MOUNT_NAME="$1" # Will be passed to jh-smb-umount
MOUNT_HOST="$2"
MOUNT_SHARE="$3"
MOUNT_USERNAME="$4"
MOUNT_PASSWORD="$5"

MOUNT_USER="$SUDO_USER"
MOUNT_ROOT="/home/$MOUNT_USER/smb"
MOUNT="$MOUNT_ROOT/$MOUNT_NAME"

# Protect against hack
MOUNT="$(realpath --canonicalize-missing --physical "$MOUNT")"

if ! [[ "$MOUNT_HOST" =~ ^[[:alnum:]][[:alnum:]\.]*$ ]]; then
    jh_error "Invalid host '$MOUNT_HOST'"
    exit 1
fi

if ! [[ "$MOUNT_SHARE" =~ ^[[:alnum:]\.]+$ ]]; then
    jh_error "Invalid share '$MOUNT_SHARE'"
    exit 1
fi

if ! [[ "$MOUNT_NAME" =~ ^[[:alnum:]][[:alnum:]\.]*_[[:alnum:]\.]+_[[:alnum:]]+$ ]]; then
    jh_error "Invalid mount name '$MOUNT_NAME'"
    exit 1
fi

if ! [[ "$MOUNT_USERNAME" =~ ^[a-z_][a-z0-9_-]*[$]?$ ]]; then
    jh_error "Invalid username '$MOUNT_USERNAME'"
    exit 1
fi

if [[ -n "$(ls -A "$MOUNT")" ]]; then
    jh_error "Mount not empty ($MOUNT)"
    exit 1
fi

mkdir -p "$MOUNT"
sudo mount -t cifs -o "username=${MOUNT_USERNAME},password=${MOUNT_PASSWORD},uid=${MOUNT_USER},nosetuids,noperm,iocharset=utf8" "//${MOUNT_HOST}/${MOUNT_SHARE}" "$MOUNT"
chmod 777 "${MOUNT}"
