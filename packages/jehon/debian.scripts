#!/usr/bin/sh

set -o errexit

# shellcheck source-path=SCRIPTDIR/../jehon/usr/sbin/
. /usr/sbin/jehon-deb-helpers.sh

# see: dh_installdeb(1)

# if [ -e "/usr/share/debconf/confmodule" ]; then
# 	# export DEBCONF_DEBUG=developer

# 	# http://www.fifi.org/doc/debconf-doc/tutorial.html
# 	# shellcheck disable=SC1091
# 	. /usr/share/debconf/confmodule
# fi

jh_deb_helper_system_group "docker"
jh_deb_helper_system_group "fuse"
jh_deb_helper_system_group "vboxusers"
jh_deb_helper_system_group "sudo"
jh_deb_helper_system_group "jehon-secrets"
jh_deb_helper_system_group "jehon-cloud"

jh_deb_helper_system_user "jehon"
jh_deb_helper_user_in_group "jehon" "docker"
jh_deb_helper_user_in_group "jehon" "fuse"
jh_deb_helper_user_in_group "jehon" "sudo"
jh_deb_helper_user_in_group "jehon" "vboxusers"
jh_deb_helper_user_in_group "jehon" "systemd-journal"

jh_deb_helper_system_user "jehon-tty"
jh_deb_helper_user_in_group "jehon-tty" "tty"
jh_deb_helper_user_in_group "jehon-tty" "video"

jh_deb_helper_system_user "jehon-daemon"
jh_deb_helper_user_in_group "jehon-daemon" "docker"
jh_deb_helper_user_in_group "jehon" "jehon-daemon"

jh_deb_helper_service jehon-backup-snapshot.timer
jh_deb_helper_service jehon-update-rclone.timer
jh_deb_helper_service jehon-system-clean.timer

jh_deb_helper_patch "/etc/fuse.conf" "jehon" "/usr/share/jehon/etc_fuse.conf.patch"
jh_deb_helper_patch "/etc/inputrc" "jehon" "/usr/share/jehon/etc_inputrc.patch"
jh_deb_helper_patch "/etc/zsh/zshrc" "jehon" "/usr/share/jehon/etc_zsh_zshrc.patch"

# Those scripts must handled the configure/remove
run-parts --verbose --regex ".*" \
	--arg "$1" \
	/usr/share/jehon/scripts/install

case "$1" in
configure)
	if [ ! -d /etc/jehon/restricted/ ]; then
		echo "- Creating /etc/jehon/restricted..."
		mkdir -p /etc/jehon/restricted/
	fi
	chmod --changes --recursive "u=rwX,g=rX,o=" /etc/jehon/restricted
	chown --changes --recursive "root:jehon-secrets" /etc/jehon/restricted

	if ! find /etc/ssh/ssh_host_* 1>/dev/null 2>/dev/null; then
		echo "- Generating host keys for ssh..."
		cd /etc/ssh && ssh-keygen -A
	fi

	if ! [ -r /etc/default/locale ]; then
		cp -f /usr/share/jehon/locale /etc/default/locale
	fi

	mkdir -p /mnt/cloud
	chmod a+rX /mnt/cloud

	mkdir -p /mnt/data
	chmod a+rX /mnt/data

	mkdir -p /var/cache/rclone
	mkdir -p /var/cache/jehon

	# Install a new revision of rclone
	# Uninstallation will be done when removing rclone package
	# FIXME(rclone>1.64.2): remove this when ubuntu version is > 1.64.2
	/usr/sbin/jh-install-rclone-latest

	if [ -r /etc/locale.gen ]; then
		jh_enable_locale() {
			L="$1"

			if ! grep -e "^$L" /etc/locale.gen 2>/dev/null >/dev/null; then
				echo "Activating and generating locales $L"
				sed --in-place "s/^# $L/$L/" /etc/locale.gen
				# /usr/sbin/locale-gen "$L"
			fi
		}

		jh_enable_locale 'fr_BE.UTF-8'
		jh_enable_locale 'en_IE.UTF-8'
		jh_enable_locale 'en_US.UTF-8'

		/usr/sbin/locale-gen --keep-existing
	else
		echo "No locale.gen found, not enabling $L"
	fi

	if jh-is-full-machine; then
		if systemctl is-active --quiet ssh; then
			echo "* Reload ssh config"
			systemctl reload ssh
		fi

		if ! ufw status | grep "Status: active" >/dev/null 2>/dev/null; then
			echo "* Enabling ufw"
			# UFW ask confirmation otherwise, but this confirmation is not handled by Ansible...
			# so we force it!
			ufw --force enable
			echo "* Enabling ufw done"
		fi
	fi

	# To allow auto mounting throug rclone (https://rclone.org/commands/rclone_mount/)
	# Debian create these links for us, let's not conflict
	if [ ! -r /sbin/mount.rclone ]; then
		ln -s /usr/bin/rclone /sbin/mount.rclone
	fi

	if [ ! -r /sbin/mount.rclone ]; then
		ln -s /usr/bin/rclone /usr/bin/rclonefs
	fi
	;;
remove) ;;
esac

#
# Legacy: jh_deb_helper_legacy
#

exit 0
