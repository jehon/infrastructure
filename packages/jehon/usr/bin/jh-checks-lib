#!/usr/bin/env bash

# shellcheck source=SCRIPTDIR/jh-lib
. jh-lib

#
# Structure:
#   test_test:       true / false - no output!
#   test_summary:    to show on output (first line)
#   test_detailled?: details of failing test
#   test_infos?:
#   test_warnings?:
#

isDetailled() {
	# https://stackoverÂµflow.com/a/2741116/1954789
	test "${BASH_ARGV[0]}" = "-v"
}

main() {
	local RES=""
	local FN
	FN="$(jh-fs "name" "$0")"

	if [ -z "$C_TITLE" ]; then
		C_TITLE="$FN"
	fi

	if [ -z "$C_CONTEXT" ]; then
		C_CONTEXT="$FN"
	fi

	local N=20
	local TEXT_TITLE
	local TEXT_CONTEXT
	
	TEXT_TITLE="$(printf "[%-${N}s]" "${C_TITLE:0:${N}}")"
	if [ "$C_CONTEXT" != "$C_TITLE" ]; then
		TEXT_CONTEXT=" ($C_CONTEXT)"
	fi

	if ! test_test || isDetailled; then
		echo "$JH_MSG_KO $(jh_color "31")$TEXT_TITLE $(test_summary)$(jh_color)$TEXT_CONTEXT"
		if type test_detailled &>/dev/null; then
			test_detailled | sed -e "s%^%    | %"
		fi
		RES="failed"
	else
		echo "$JH_MSG_OK $TEXT_TITLE $(test_summary)$TEXT_CONTEXT"
	fi

	if type test_infos &>/dev/null; then
		test_infos | sed -e "s%^%    -> %"
	fi

	if type test_warnings &>/dev/null; then
		test_warnings | sed -e "s,^.*$,    -> $(jh_color 33)&$(jh_color),"
	fi

	test -z "$RES"
}

check_faclity_not_present() {
	FACILITY="$1"
	test_test() {
		return 0
	}

	test_summary() {
		echo "$FACILITY not present"
	}

	test_detailled() {
		echo ""
	}

	main
}

check_with_systemd() {
	local SERVICE="$1"
	local C_TITLE="service: $SERVICE"

	test_test() {
		if jh-is-full-machine >/dev/null; then
			systemctl is-active "$SERVICE" &>/dev/null
		else
			true
		fi
	}

	test_summary() {
		if jh-is-full-machine >/dev/null; then
			if test_test; then
				echo "$SERVICE is running"
			else
				echo "$SERVICE is not running"
			fi
		else
			echo "Systemctl is not running for service '$SERVICE'"
		fi
	}

	test_detailled() {
		systemctl status "$SERVICE"
	}

	main
}

check_mount() {
	local MOUNT="$1"
	local C_TITLE="mount: $MOUNT"

	test_test() {
		mount | grep "$MOUNT" &>/dev/null
		jh-fs "not-empty" "$MOUNT" &>/dev/null
	}

	test_summary() {
		if ! mount | grep "$MOUNT" &>/dev/null; then
			echo "Not mounted"
			return 1
		fi
		if ! jh-fs "not-empty" "$MOUNT" &>/dev/null; then
			echo "Empty"
			return 1
		fi
		echo "Not empty"
	}

	test_detailled() {
		mount | grep "$MOUNT"
		ls "$MOUNT"
	}

	main
}

check_with_command() {
	local COMMAND="$1"

	test_test() {
		bash -c "$COMMAND" &>/dev/null
	}

	test_summary() {
		echo "$COMMAND"
	}

	test_detailled() {
		bash -c "$COMMAND"
	}

	main
}
