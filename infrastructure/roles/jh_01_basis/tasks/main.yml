---
- name: Get facts on current container
  community.docker.current_container_facts:

- name: Set is_virtual
  block:
    - name: Calculate 'virtual'
      ansible.builtin.set_fact:
        virtual: "{{ ansible_module_running_in_container }}"

    - name: Dump 'virtual'
      ansible.builtin.debug:
        var: virtual

- name: Install packages
  when: ansible_pkg_mgr == "apt"
  block:
    # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/package_facts_module.html
    - name: Check packages
      ansible.builtin.package_facts:
        manager: auto

    - name: Update system
      block:
        - name: Update cache if too old
          # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/apt_module.html#parameter-cache_valid_time
          ansible.builtin.apt:
            cache_valid_time: 3600 # seconds -> 1 hour
            autoclean: true
          register: jh_01_basis_initial_apt_update
          # This does not make change!
          changed_when: false

        - name: Run upgrade
          when: jh_01_basis_initial_apt_update.cache_updated
          ansible.builtin.apt:
            upgrade: dist
          # We don't want to track those changes
          changed_when: false

    # ############################################
    # #
    # # Configure universe repository
    # #
    # ############################################

    # - name: Add ubuntu universe
    #   when: ansible_distribution == "Ubuntu"
    #   ansible.builtin.apt_repository:
    #     repo: "deb http://archive.ubuntu.com/ubuntu {{ ansible_distribution_release }} main universe restricted multiverse"
    #     state: present
    #     update_cache: true

    ############################################
    #
    # Install jehon.deb
    #
    ############################################

    - name: "Install jehon.deb"
      block:
        - name: Dump jh_deb_url
          ansible.builtin.debug:
            var: jh_deb_url

        # We need this one to be installed first, because next line will depend on it
        - name: "Install jehon.deb"
          when: "'jehon' not in ansible_facts.packages"
          ansible.builtin.apt:
            deb: "{{ jh_deb_url | default('https://jehon.github.io/infrastructure/packages/jehon.deb') }}"
            # This will be done by the jh_01_basis.indexes at the correct time...
            update_cache: false
          notify: jh_01_basis.indexes
          register: jehon_basis_jehon_deb
          # Example: [run]   msg: Breaks existing package 'jehon-hardware-wsl' dependency jehon (<= 2023.06.28.14.53.03)
          failed_when: >
            jehon_basis_jehon_deb.failed
            and (
              ('A later version is already installed' != jehon_basis_jehon_deb.msg)
              and (' dependency jehon (' not in jehon_basis_jehon_deb.msg)
            )

        - name: Remove online repositories because defined jh_deb_url
          when: jh_deb_url is defined and jh_deb_url
          ansible.builtin.file:
            path: /etc/apt/sources.list.d/jehon-github.sources
            state: absent

    ############################################
    #
    # Update repository if necessary
    #
    ############################################
    - name: Update repositories if necessary...
      ansible.builtin.meta: flush_handlers

    ############################################
    #
    # Packages jehon-*
    #
    ############################################
    - name: Install jehon-hardware-*
      block:
        - name: Calculate jehon_hardware
          block:
            - name: Set default value for jehon_hardware
              when: jehon_hardware is not defined
              ansible.builtin.set_fact:
                jehon_hardware: ""

            - name: Set jehon_hardware to wsl
              # https://stackoverflow.com/a/78046212/1954789
              when: '"microsoft" in ansible_facts["kernel"]'
              ansible.builtin.set_fact:
                jehon_hardware: wsl

            - name: Set jehon_hardware to raspberrypi
              when: ansible_architecture == "aarch64" # vs. amd64 for laptop
              ansible.builtin.set_fact:
                jehon_hardware: raspberrypi

            - name: Set jehon_hardware to docker
              # https://docs.ansible.com/ansible/latest/collections/community/docker/current_container_facts_module.html
              when: ansible_module_running_in_container
              ansible.builtin.set_fact:
                jehon_hardware: docker

            # TODO: jehon_hardware = desktop ???

        - name: Dump jehon_hardware
          ansible.builtin.debug:
            var: jehon_hardware

        - name: Install hardware package
          when: jehon_hardware | length > 0
          block:
            - name: "Ensure jehon-hardware is present for hardware {{ jehon_hardware }}"
              ansible.builtin.apt:
                pkg:
                  - "jehon-hardware-{{ jehon_hardware }}"

    ############################################
    #
    # Packages (too volatile one)
    #
    ############################################

    ############################################
    #
    # Docker
    #
    ############################################
    #
    # Docker:
    #
    # 2024-07-11: deb packages have apparmor problems
    # 2024-09-04: VPS is running on snap
    #             Forcing removal of docker packages
    # 2024-10-05: Switching to docker-ce.deb
    #              - remove --purge snap
    #              - reboot
    #              - install deb's
    #
    - name: Install Docker
      block:
        - name: "Docker snap"
          when: not virtual
          block:
            - name: "Normal snaps"
              community.general.snap:
                state: absent
                name:
                  - docker

        - name: "Docker package"
          ansible.builtin.apt:
            state: present
            pkg:
              - containerd.io
              - docker-ce
              - docker-ce-cli
              - docker-ce-rootless-extras
              - docker-buildx-plugin
              - docker-compose-plugin

############################################
#
# Networks
#
############################################
- name: Add IP address to /etc/hosts
  loop: "{{ query('ansible.builtin.varnames', '^jehon_ip_.+') | replace('jehon_ip_', '') }}"
  ansible.builtin.lineinfile:
    path: /etc/hosts
    # Match: <ip|ipv6> <host>.honlet <legacy> # ansible
    regexp: ".* {{ item }}.honlet .* # ansible"
    # Set: <hostname>.honlet and <hostname> alias
    line: "{{ vars['jehon_ip_' + item] }} {{ item }}.honlet {{ item }} # ansible"
    state: present
  register: _
  # On docker, the /etc/hosts is not writable
  # complete message: [Errno 16] Device or resource busy
  failed_when: >
    _.failed
    and "[Errno 16]" not in _.msg

############################################
#
# Cloud
#
############################################
- name: Handle cloud configuration
  block:
    - name: Configure cloud
      when: jehon_cloud_type | length > 0
      block:
        - name: Install packages (fuse)
          when: ansible_pkg_mgr == "apt"
          ansible.builtin.apt:
            name:
              - fuse3

        - name: "Install config"
          ansible.builtin.template:
            src: "rclone.conf"
            dest: /etc/jehon/rclone.conf
            owner: root
            group: jehon-daemon
            mode: "0640"

    ## ELSE ##
    - name: "Remove config"
      when: jehon_cloud_type | length == 0
      with_items:
        - /etc/jehon/rclone.conf
        - /var/lib/docker-plugins/rclone/config/rclone.conf
      ansible.builtin.file:
        state: absent
        dest: "{{ item }}"
      notify: Jh_cloud.systemctl_reload
  #
  # TODO: enable various mounts
  #
