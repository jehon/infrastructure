#!/usr/bin/env bash

set -o errexit
set -o pipefail
shopt -s nullglob

_SD="$(dirname "$(realpath "${BASH_SOURCE[0]}")")"

# shellcheck source-path=SCRIPTDIR
. "${_SD}"/lib.sh

moveWindowTo() {
    # Thanks to https://askubuntu.com/a/702302/638656

    window="${1:?Need window to move}"
    desktop="${2:?Need the desktop}"
    position="${3:?Need target position}" # x,y,w,h (gravity is hardcoded)
    shift
    shift
    # Options for [...]:
    #    - maximized_vert
    #    - maximized_horz

    winId=$(
        wmctrl -l |
            grep -E -- "${window}" |
            cut -d" " -f1 || true
    )
    printf "%-30s | %10s | %-20s | " "${window}" "${winId}" "${position}"

    if [ -z "${winId}" ]; then
        echo "not found!"
        return
    fi

    WM() {
        wmctrl -ir "$winId" "$@"
    }

    WM -b remove,maximized_vert
    WM -b remove,maximized_horz
    WM -e "0,${position}"
    WM -t "${desktop}"
    while [ -n "$1" ]; do
        WM -b add,"$1"
        shift
    done
    echo "ok"
}

# All screens
: $((BORDER_LEFT = 51))
: $((BORDER_TOP = 106))

# Secondary
: $((S_SEC_LEFT = BORDER_LEFT))
: $((S_SEC_TOP = BORDER_TOP))
: $((S_SEC_WIDTH = 1920 - BORDER_LEFT))
: $((S_SEC_HEIGHT = 1080 - BORDER_TOP))

# Primary
: $((S_PRIM_LEFT = S_SEC_LEFT + S_SEC_WIDTH + BORDER_LEFT))
: $((S_PRIM_TOP = BORDER_TOP))
: $((S_PRIM_WIDTH = 3440 - BORDER_LEFT))
: $((S_PRIM_HEIGHT = 1440 - BORDER_TOP))

case "$1" in
"")
    # Secondary screen
    moveWindowTo 'Spotify' \
        1 \
        "$((S_SEC_LEFT)),$((S_SEC_TOP)),$((S_SEC_WIDTH)),$((S_SEC_HEIGHT))" \
        maximized_vert maximized_horz

    # Front screen D1

    # Front screen D2
    moveWindowTo '.* - infrastructure$' \
        1 \
        "$((S_PRIM_LEFT)),$((S_PRIM_TOP)),$((S_PRIM_WIDTH / 2)),$((S_PRIM_HEIGHT))" \
        maximized_vert

    # Front screen D3
    moveWindowTo '.* - cryptomedic$' \
        2 \
        "$((S_PRIM_LEFT + BORDER_LEFT)),$((S_PRIM_TOP + BORDER_TOP)),$((S_PRIM_WIDTH / 2)),$((S_PRIM_HEIGHT))" \
        maximized_vert
    ;;
"ls-windows")
    wmctrl -l -G
    exit 0
    ;;
"ls-screens")
    xrandr | grep " connected"
    exit 0
    ;;
*)
    jh_fatal "Unknown verb: $1"
    ;;
esac
